#!/bin/bash

if [[ -z "$1" ]];
then 
  echo Missing profile name
  exit 1
else
  if [[ "$2" == "refresh" ]];
  then
    rm ~/.aws/cli/cache/$1*
  fi
  
  if aws sts get-caller-identity --profile $1 >/dev/null
  then

  read token key id <<< $(
   cat ~/.aws/cli/cache/${1}--arn*.json | python -c '
import json, sys
creds = json.load(sys.stdin)["Credentials"]
print(" ".join(creds[_] for _ in ("SessionToken","SecretAccessKey","AccessKeyId")))
')

    region=$(aws configure get region --profile $1)
    
    if [[ "$2" == "show" ]];
    then
      echo "export AWS_SESSION_TOKEN=$token"
      echo "export AWS_SECURITY_TOKEN=$token"
      echo "export AWS_SECRET_ACCESS_KEY=$key"
      echo "export AWS_ACCESS_KEY_ID=$id"
      if [[ -z "$region" ]];
      then
        echo "# No region set"
      else
        echo "export AWS_REGION=$region"
        echo "export AWS_DEFAULT_REGION=$region"
      fi
    fi

    if [[ "$TERM_PROGRAM" == "iTerm.app" ]];
    then
      echo -ne "\033]1;AWS ROLE: $1\007"
    fi
    export AWS_SECURITY_TOKEN=$token
    export AWS_SESSION_TOKEN=$token
    export AWS_SECRET_ACCESS_KEY=$key
    export AWS_ACCESS_KEY_ID=$id
    if [[ -z "$region" ]];
    then
      unset AWS_REGION
      unset AWS_DEFAULT_REGION
    else
      export AWS_REGION=$region
      export AWS_DEFAULT_REGION=$region
    fi
  fi
fi
